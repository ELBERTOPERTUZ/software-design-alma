<div id="side-cart" class="side-cart hidden">
  <!-- Loading Bar -->
  <div id="cart-loading-bar" style="height: 3px; background: black; width: 0%; transition: width 0.3s ease;"></div>

  <div class="side-cart-header d-flex justify-content-between align-items-center p-3 border-bottom">
    <h5 class="mb-0">
      <strong><%= t("cart") %></strong>
      (<%= turbo_frame_tag "cart_count" do %>
        <span><%= current_cart.cart_items.sum(:quantity) rescue 0 %></span>
      <% end %> <%= t("items") %>)
    </h5>
    <button id="cart-close" class="btn-close text-white" aria-label="Close"></button>
  </div>

  <div class="side-cart-content p-3 flex-grow-1 overflow-auto">
    <%= render partial: 'shared/side_cart_content' %>
  </div>

  <% if current_cart.cart_items.empty? %>
    <div class="side-cart-footer p-3 border-top w-100">
      <%= link_to t("shop_all"), categories_path(locale: I18n.locale), class: "cart-button mb-2 w-100" %>
      <%= link_to t("home"), root_path(locale: I18n.locale), class: "cart-button mb-2 w-100" %>
    </div>
  <% else %>
    <%= turbo_frame_tag "total_price" do %>
      <% total_price = number_to_currency(current_cart.cart_items.sum { |item| item.product.price * item.quantity }, precision: 0) %>
      <div class="side-cart-footer p-3 border-top w-100 d-flex justify-content-between align-items-center">
        <%= link_to "#{t("checkout")} #{total_price}", categories_path(locale: I18n.locale), class: "cart-button ms-2" %>
      </div>
    <% end %>
  <% end %>
</div>

<!-- Script para abrir/cerrar y mostrar loading bar en acciones dentro del carrito -->
<script>
  function attachCartListeners() {
    const loadingBar = document.getElementById("cart-loading-bar");

    function showCartLoadingBar() {
      if (!loadingBar) return;
      loadingBar.style.display = "block";
      loadingBar.style.width = "0%";
      requestAnimationFrame(() => {
        loadingBar.style.width = "100%";
      });
    }

    function hideCartLoadingBar() {
      if (!loadingBar) return;
      setTimeout(() => {
        loadingBar.style.width = "0%";
        loadingBar.style.display = "none";
      }, 300);
    }

    // Eliminar duplicados antes de volver a asignar
    document.querySelectorAll("#side-cart form").forEach(form => {
      form.removeEventListener("submit", showCartLoadingBar);
      form.addEventListener("submit", showCartLoadingBar);
    });

    document.querySelectorAll("#side-cart .remove-btn").forEach(button => {
      button.removeEventListener("click", showCartLoadingBar);
      button.addEventListener("click", showCartLoadingBar);
    });

    document.removeEventListener("turbo:submit-end", hideCartLoadingBar);
    document.addEventListener("turbo:submit-end", hideCartLoadingBar);
  }

  document.addEventListener("turbo:load", () => {
    const cartToggle = document.getElementById("cart-toggle");
    const cartToggleXL = document.getElementById("cart-toggle-xl");
    const cartClose = document.getElementById("cart-close");
    const sideCart = document.getElementById("side-cart");

    function openCart() {
      sideCart.classList.remove("hidden");
      requestAnimationFrame(() => {
        sideCart.classList.add("open");
      });
    }

    function closeCart() {
      sideCart.classList.remove("open");
      setTimeout(() => {
        sideCart.classList.add("hidden");
      }, 300);
    }

    if (cartToggle) cartToggle.addEventListener("click", openCart);
    if (cartToggleXL) cartToggleXL.addEventListener("click", openCart);
    if (cartClose) cartClose.addEventListener("click", closeCart);

    const itemAddedMeta = document.querySelector('meta[name="cart-item-added"]');
    if (itemAddedMeta && itemAddedMeta.content === "true") {
      openCart();
    }

    attachCartListeners(); // Ejecutar al cargar la página
  });

  document.addEventListener("turbo:frame-load", attachCartListeners); // Reasignar después de reemplazos Turbo
</script>
